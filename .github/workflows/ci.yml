# .github/workflows/ci.yml
name: 🚀 CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  NODE_VERSION: '22.17.1'
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # ================================
  # CODE QUALITY & TESTING
  # ================================
  quality:
    name: 🔍 Code Quality & Testing
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.17.1]
    
    steps:
      - name: 📦 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🟢 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: 📥 Install Dependencies
        run: |
          npm ci
          npm ls --depth=0

      - name: 🔨 Build TypeScript
        run: npm run build

      - name: 🧪 Run Tests
        run: |
          npm run test -- --coverage --ci --watchAll=false
          npm run test:strategies
          npm run test:cognitive

      - name: 📊 Upload Coverage
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-${{ matrix.node-version }}

      - name: 🔍 Lint Code
        run: |
          npm run lint
          npm run lint:fix --if-present

      - name: 🏗️ Type Check
        run: npm run type-check --if-present

      - name: 🔒 Security Audit
        run: |
          npm audit --audit-level=moderate
          npx audit-ci --moderate

      - name: 📋 License Check
        run: npx license-checker --onlyAllow "MIT;Apache-2.0;BSD-2-Clause;BSD-3-Clause;ISC" --excludePrivatePackages

  # ================================
  # PERFORMANCE BENCHMARKS
  # ================================
  benchmarks:
    name: ⚡ Performance Benchmarks
    runs-on: ubuntu-latest
    needs: quality
    
    steps:
      - name: 📦 Checkout Repository
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Install Dependencies
        run: npm ci

      - name: 🔨 Build Application
        run: npm run build

      - name: 🏃 Run Benchmarks
        run: |
          npm run benchmark || true
          npm run benchmark:memory || true

      - name: 📊 Upload Benchmark Results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: benchmark-results.json
          retention-days: 30

  # ================================
  # DOCKER BUILD & TEST
  # ================================
  docker:
    name: 🐳 Docker Build & Test
    runs-on: ubuntu-latest
    needs: quality
    
    steps:
      - name: 📦 Checkout Repository
        uses: actions/checkout@v4

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔑 Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 📝 Extract Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: 🏗️ Build Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: release

      - name: 🧪 Test Docker Image
        run: |
          docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest node -e "console.log('Container test passed')"

  # ================================
  # INTEGRATION TESTS
  # ================================
  integration:
    name: 🔗 Integration Tests
    runs-on: ubuntu-latest
    needs: [quality, docker]
    
    services:
      metacognition:
        image: ghcr.io/${{ github.repository }}:${{ github.sha }}
        options: --health-cmd "node -e \"console.log('Health check')\"" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: 📦 Checkout Repository
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Install Dependencies
        run: npm ci

      - name: 🔗 Run Integration Tests
        run: |
          npm run test:integration || true
          npm run test:e2e || true

  # ================================
  # DEPENDENCY ANALYSIS
  # ================================
  dependencies:
    name: 📦 Dependency Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: 📦 Checkout Repository
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Install Dependencies
        run: npm ci

      - name: 🔍 Analyze Bundle Size
        run: |
          npx bundlesize || true
          npx bundle-analyzer dist/index.js --static || true

      - name: 📊 Dependency Tree Analysis
        run: |
          npm ls --all --json > dependency-tree.json
          npx depcheck || true

      - name: 🚨 Check for Vulnerabilities
        run: |
          npx snyk test || true
          npx retire || true

      - name: 📋 Generate Dependency Report
        run: |
          npx license-report --output=csv > licenses.csv
          npx cost-of-modules --no-install || true

      - name: 📊 Upload Dependency Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dependency-analysis
          path: |
            dependency-tree.json
            licenses.csv
          retention-days: 30